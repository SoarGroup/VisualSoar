/* Generated By:JavaCC: Do not edit this line. SoarParserConstants.java */
package edu.umich.soar.visualsoar.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SoarParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SP = 7;
  /** RegularExpression Id. */
  int GP = 8;
  /** RegularExpression Id. */
  int SOARCMD = 9;
  /** RegularExpression Id. */
  int RARROW = 16;
  /** RegularExpression Id. */
  int SAME_TYPE = 17;
  /** RegularExpression Id. */
  int GEQUAL = 18;
  /** RegularExpression Id. */
  int LDISJUNCT = 19;
  /** RegularExpression Id. */
  int LEQUAL = 20;
  /** RegularExpression Id. */
  int NEQUAL = 21;
  /** RegularExpression Id. */
  int RDISJUNCT = 22;
  /** RegularExpression Id. */
  int AMPERSAND = 23;
  /** RegularExpression Id. */
  int ATSIGN = 24;
  /** RegularExpression Id. */
  int CARET = 25;
  /** RegularExpression Id. */
  int COMMA = 26;
  /** RegularExpression Id. */
  int EMARK = 27;
  /** RegularExpression Id. */
  int EQUAL = 28;
  /** RegularExpression Id. */
  int GREATER = 29;
  /** RegularExpression Id. */
  int HYPHEN = 30;
  /** RegularExpression Id. */
  int LBRACE = 31;
  /** RegularExpression Id. */
  int LESS = 32;
  /** RegularExpression Id. */
  int LPAREN = 33;
  /** RegularExpression Id. */
  int PERIOD = 34;
  /** RegularExpression Id. */
  int PLUS = 35;
  /** RegularExpression Id. */
  int QMARK = 36;
  /** RegularExpression Id. */
  int ATPLUS = 37;
  /** RegularExpression Id. */
  int ATMINUS = 38;
  /** RegularExpression Id. */
  int BANGAT = 39;
  /** RegularExpression Id. */
  int RBRACE = 40;
  /** RegularExpression Id. */
  int RPAREN = 41;
  /** RegularExpression Id. */
  int TILDE = 42;
  /** RegularExpression Id. */
  int LSQBRACKET = 43;
  /** RegularExpression Id. */
  int RSQBRACKET = 44;
  /** RegularExpression Id. */
  int QUOTE = 45;
  /** RegularExpression Id. */
  int PRODTYPE = 46;
  /** RegularExpression Id. */
  int VARIABLE = 47;
  /** RegularExpression Id. */
  int INTEGER_CONST = 48;
  /** RegularExpression Id. */
  int SYMBOLIC_CONST = 49;
  /** RegularExpression Id. */
  int FLOATING_POINT_CONST = 50;
  /** RegularExpression Id. */
  int EXPONENT = 51;
  /** RegularExpression Id. */
  int TCL_PREPROCESS = 52;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SOAR_PRODUCTION = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "<token of kind 2>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"sp\"",
    "\"gp\"",
    "<SOARCMD>",
    "<token of kind 10>",
    "<token of kind 11>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"-->\"",
    "\"<=>\"",
    "\">=\"",
    "\"<<\"",
    "\"<=\"",
    "\"<>\"",
    "\">>\"",
    "\"&\"",
    "\"@\"",
    "\"^\"",
    "\",\"",
    "\"!\"",
    "\"=\"",
    "\">\"",
    "\"-\"",
    "\"{\"",
    "\"<\"",
    "\"(\"",
    "\".\"",
    "\"+\"",
    "\"?\"",
    "\"@+\"",
    "\"@-\"",
    "\"!@\"",
    "\"}\"",
    "\")\"",
    "\"~\"",
    "\"[\"",
    "\"]\"",
    "\"\\\"\"",
    "<PRODTYPE>",
    "<VARIABLE>",
    "<INTEGER_CONST>",
    "<SYMBOLIC_CONST>",
    "<FLOATING_POINT_CONST>",
    "<EXPONENT>",
    "<TCL_PREPROCESS>",
  };

}
