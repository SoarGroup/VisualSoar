name: Build and Test

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          windows-latest,
          ubuntu-latest,
          # latest available X86_64 target
          macos-15,
          # latest is ARM
          macos-latest,
        ]
    steps:
      - uses: actions/checkout@v2 # Checkout the repository

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Build with Gradle (non-Ubuntu)
        if: matrix.os != 'ubuntu-latest'
        run: ./gradlew build --no-daemon

      # On Ubuntu, we have to set up a dummy X11 display for some tests that use the GUI
      - name: Build with Gradle (on Ubuntu with dummy X11 display)
        if: matrix.os == 'ubuntu-latest'
        run: |
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          ./gradlew build --no-daemon

      # reports JUnit test results as GitHub PR check.
      - name: publish test report
        uses: mikepenz/action-junit-report@v3
        # always run even if the previous step fails
        if: always()
        with:
          report_paths: "build/reports/test-results/*.xml"
          # disabled until https://github.com/mikepenz/action-junit-report/issues/40 is resolved
          # fail_on_failure: true
          annotate_only: true

      - name: Jar
        run: ./gradlew jar --no-daemon

      - name: Runtime Zip
        run: ./gradlew runtimeZip --no-daemon

      - name: JPackage
        run: ./gradlew jpackage --no-daemon

      - name: Archive build artifacts
        # Only runs if the previous steps were successful
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: image-and-jar-${{ matrix.os }}
          path: |
            build/libs/*.jar
            build/image.zip
            build/jpackage

